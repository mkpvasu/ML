import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# Read in weather data and view.
weather = pd.read_csv("weather.csv")
weather

train_data, test_data = train_test_split(weather, random_state=42)

input_cols = ['STA', 'YR', 'MO', 'DA', 'MIN']

train_X = train_data[input_cols]
train_y = train_data["MAX"]

test_X = test_data[input_cols]
test_y = test_data["MAX"]

X = weather[input_cols]
y = weather['MAX']

print(X.shape)
print(y.shape)

print("train input data shape:", train_X.shape)
print("train target data shape:", train_y.shape)
print()
print("test input data shape:", test_X.shape)
print("test target data shape:", test_y.shape)

scaler = StandardScaler().fit(train_X)

train_X_norm = scaler.transform(train_X)
test_X_norm = scaler.transform(test_X)
print(scaler.mean_)

from sklearn.linear_model import Ridge
from sklearn.model_selection import cross_val_score
from sklearn.metrics import mean_squared_error

ridge_model = Ridge(alpha=1.0).fit(train_X, train_y)

def rmse(model, X, y):
    y_pred = ridge_model.predict(X)
#   return mean_squared_error(y, y_pred) ** 0.5
    return mean_squared_error(y, y_pred, squared = False)
    
ridge_CV_scores = cross_val_score(ridge_model, train_X, train_y, cv=5, scoring=rmse)
ridge_CV_scores = cross_val_score(Ridge(alpha=0.1), train_X, train_y, cv=5, scoring=rmse)
ridge_CV_scores

for reg_coef in [1e-3, 1e-2, 0.1, 1, 10, 100, 1000, 10000]:
    ridge_model = Ridge(alpha=reg_coef).fit(train_X_norm, train_y)
    ridge_CV_scores = cross_val_score(ridge_model, train_X_norm, train_y, cv=5, scoring=rmse)
    print(reg_coef, ridge_CV_scores.mean(), sep='\t')
    
for reg_coef in [1, 100, 10e4, 10e7, 10e12]:
    ridge_model = Ridge(alpha=reg_coef)
    ridge_model.fit(train_X_norm, train_y)
    print(f"Lambda: \t {reg_coef}")
    print(f"Intercept: \t {ridge_model.intercept_}")
    print(f"Coefficients: \t {ridge_model.coef_}")
    print("------------------")
